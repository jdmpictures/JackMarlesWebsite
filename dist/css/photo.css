@font-face {
  font-family: "Tele-Two";
  src: url(../fonts/EuropeanTeletextNuevo.ttf);
}

body {
  margin: 0;
  padding: 0;
}

.status-bar {
  z-index: 9999999;
}

/* ----- Desktop Sidebar ----- */
.sidebar {
  display: flex;
  height: 100%;
  width: 30%;
  position: fixed;
  border-right: white solid 1.5px;
  align-items: center;
  justify-content: center;
  top: 0;
  left: 0;
  background: black;
  color: white;
  z-index: 9000; /* lower than header and burger */
}

.menu {
  list-style-type: none;
  margin: 0;
  padding: 0;
  font-family: tele-two;
  text-align: center;
  line-height: 1rem;
  width: 100%;
}

.menu div {
  align-self: center;
  text-decoration: none;
  color: white;
  font-size: 0.8rem;
  cursor: pointer;
  display: block;
}

.menu div .submenu {
  display: none;
}

.menu div .subitem {
  font-size: 0.5rem;
  display: block;
}

/* gallery pushes right on desktop */
.gallery {
  margin-left: 30%;
  padding: 20px;
}

.gallery img {
  width: 30%;
  padding: 3px;
}

/* ----- Burger Button ----- */
.burger {
  display: none;         /* hidden on desktop */
  position: relative;    /* sits in normal flow */
  margin: 10px 0 0 15px; /* spacing below header */
  background: black;
  color: white;
  border-radius: 4px;
  font-size: 2rem;
  cursor: pointer;
  z-index: 10000;
}

/* Make sure header is above sidebar but below burger */
header {
  position: relative;
  z-index: 9500;
}

/* ----- Mobile Styles ----- */
@media (max-width: 768px) {
  /* Sidebar hidden on mobile */
  .sidebar {
    display: none;
    flex-direction: column;
    width: 100%;
    height: 100%;     /* cover full screen */
    position: fixed;
    top: 0;           /* sit at very top */
    left: 0;
    background: black;
    padding-top: 80px; /* space below burger */
    z-index: 9000;
  }

  /* Sidebar visible when active */
  .sidebar.active {
    display: flex;
  }

  /* Burger visible on mobile */
  .burger {
    display: block !important;
  }

  /* Gallery doesnâ€™t shift */
  .gallery {
    margin-left: 0;
  }
}

/* Lightbox overlay */
#lightbox {
  display: none; 
  position: fixed;
  z-index: 99999;
  padding-top: 60px;
  left: 0;
  top: 0;
  width: 100%; 
  height: 100%; 
  background-color: rgba(0,0,0,0.9);
  justify-content: center;
  align-items: center;
}

/* Lightbox image */
#lightbox-img {
  max-width: 90%;
  max-height: 80%;
  display: block;
  margin: auto;
}

/* Close button */
#lightbox .close {
  position: absolute;
  top: 20px;
  right: 35px;
  color: white;
  font-size: 40px;
  font-weight: bold;
  cursor: pointer;
}

/* Navigation */
.lightbox-nav .prev, .lightbox-nav .next {
  cursor: pointer;
  position: absolute;
  top: 50%;
  color: white;
  font-size: 50px;
  padding: 16px;
  user-select: none;
  transition: 0.3s;
}
.lightbox-nav .prev { left: 20px; }
.lightbox-nav .next { right: 20px; }

.lightbox-nav .prev:hover,
.lightbox-nav .next:hover,
#lightbox .close:hover {
  color: yellow;
}

JavaScript (photo.js or inline <script>)

const gallery = document.querySelectorAll('.gallery img');
const lightbox = document.getElementById('lightbox');
const lightboxImg = document.getElementById('lightbox-img');
const closeBtn = document.querySelector('#lightbox .close');
const prevBtn = document.querySelector('.lightbox-nav .prev');
const nextBtn = document.querySelector('.lightbox-nav .next');

let currentIndex = 0;

function showLightbox(index) {
  currentIndex = index;
  lightboxImg.src = gallery[index].src;
  lightbox.style.display = 'flex';
}

gallery.forEach((img, i) => {
  img.addEventListener('click', () => showLightbox(i));
});

closeBtn.addEventListener('click', () => {
  lightbox.style.display = 'none';
});

nextBtn.addEventListener('click', () => {
  currentIndex = (currentIndex + 1) % gallery.length;
  showLightbox(currentIndex);
});

prevBtn.addEventListener('click', () => {
  currentIndex = (currentIndex - 1 + gallery.length) % gallery.length;
  showLightbox(currentIndex);
});

lightbox.addEventListener('click', (e) => {
  if (e.target === lightbox) {
    lightbox.style.display = 'none';
  }
});

/* Optional: swipe support for mobile */
let startX = 0;
lightbox.addEventListener('touchstart', (e) => {
  startX = e.touches[0].clientX;
});
lightbox.addEventListener('touchend', (e) => {
  let endX = e.changedTouches[0].clientX;
  if (endX < startX - 50) nextBtn.click();
  if (endX > startX + 50) prevBtn.click();
});